@page "/"

@rendermode InteractiveServer



<div class="container mt-5">
    <div class="card bg-dark text-light p-4 rounded">
        <h3 class="text-center mb-4">To Do List</h3>

        <div class="input-group mb-3">
            <input class="form-control form-control-lg bg-slate text-white" type="text" @bind="newToDoItem" placeholder="Add a new task..." />
            <button @onclick="AddToDoItem" class="btn btn-outline-light">Add</button>
        </div>

        <hr class="bg-light" />

        <ul class="list-group">
            @foreach (string todoItem in todoList)
            {
                <li class="list-group-item bg-light text-dark rounded d-flex justify-content-between align-items-center">
                    @todoItem
                    <button class="btn-close" aria-label="Close" @onclick="(()=>DeleteToDoItem(todoItem))"></button>
                </li>
            }
        </ul>
    </div>
</div>

<style>
    body {
        background: #111;
    }

    .card {
        border: 1px solid rgba(255, 255, 255, 0.1);
    }

    .list-group-item {
        border: none;
        padding: 10px;
        margin-bottom: 10px; 
    }

        .list-group-item:first-child {
            margin-top: 10px; 
        }

    .bg-slate {
        background-color: #2e3437;
    }

        .bg-slate:focus,
        .bg-slate:hover {
            background-color: #3e454a;
        }

    .text-white {
        color: #fff;
    }
</style>

@code {
    List<string> todoList = new() { "Clean The Dishes ", "Make up The Bed" };
    string newToDoItem = "";

    void AddToDoItem()
    {
        if (string.IsNullOrWhiteSpace(newToDoItem) == false)
        {
            todoList.Add(newToDoItem);
            newToDoItem = "";
        }
    }

    void DeleteToDoItem(string todoItemToDelete)
    {
        todoList.Remove(todoItemToDelete);
    }
}